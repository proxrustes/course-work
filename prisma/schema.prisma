generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model training_direction {
  direction_id   Int          @id @default(autoincrement())
  direction_name String
  specialities   speciality[]
}

model speciality {
  speciality_id   Int                @id @default(autoincrement())
  speciality_name String
  direction_id    Int
  direction       training_direction @relation(fields: [direction_id], references: [direction_id])
  study_plans     study_plan[]
}

model education_qualification_level {
  level_id    Int          @id @default(autoincrement())
  level_name  String
  study_plans study_plan[]
}

model graduating_department {
  department_id   Int          @id @default(autoincrement())
  department_name String
  head            String
  study_plans     study_plan[]
}

model faculty_institute {
  faculty_id   Int          @id @default(autoincrement())
  faculty_name String
  dean         String
  study_plans  study_plan[]
}

model form_of_study {
  form_id     Int          @id @default(autoincrement())
  form_name   String
  study_plans study_plan[]
}

model study_duration {
  duration_id     Int          @id @default(autoincrement())
  duration_length Int
  study_plans     study_plan[]
}

model qualification {
  qualification_id   Int          @id @default(autoincrement())
  qualification_name String
  study_plans        study_plan[]
}

model study_plan {
  plan_id          Int                           @id @default(autoincrement())
  is_approved      Int
  speciality_id    Int
  level_id         Int
  department_id    Int
  faculty_id       Int
  subject_id Int
  form_id          Int
  duration_id      Int
  qualification_id Int
  creation_date    DateTime
  title             String
  text             String
  plan_changes     plan_change[]
  subject         subject                    @relation(fields: [subject_id], references: [subject_id])
  speciality       speciality                    @relation(fields: [speciality_id], references: [speciality_id])
  level            education_qualification_level @relation(fields: [level_id], references: [level_id])
  department       graduating_department         @relation(fields: [department_id], references: [department_id])
  faculty          faculty_institute             @relation(fields: [faculty_id], references: [faculty_id])
  form             form_of_study                 @relation(fields: [form_id], references: [form_id])
  duration         study_duration                @relation(fields: [duration_id], references: [duration_id])
  qualification    qualification                 @relation(fields: [qualification_id], references: [qualification_id])
}

model subject {
  subject_id    Int            @id @default(autoincrement())
  subject_name  String
  hours_count   Int
  plans         study_plan[]
}


model user {
  user_id      Int           @id @default(autoincrement())
  name         String
  password     String
  access_level Int
  action_logs  action_log[]
  plan_changes plan_change[]
  reports      report[]
}

model plan_change {
  change_id          Int        @id @default(autoincrement())
  plan_id            Int
  change_date        DateTime
  user_id            Int
  change_description String
  plan               study_plan @relation(fields: [plan_id], references: [plan_id])
  user               user       @relation(fields: [user_id], references: [user_id])
}

model report {
  report_id       Int      @id @default(autoincrement())
  report_name     String
  text            String
  generation_date DateTime
  user_id         Int
  user            user     @relation(fields: [user_id], references: [user_id])
}

model action_log {
  action_log_id   Int    @id @default(autoincrement())
  action          String
  user_id         Int
  additional_info String
  user            user   @relation(fields: [user_id], references: [user_id])
}
